<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Vic.Data.DataAccess</name>
    </assembly>
    <members>
        <member name="T:Vic.Data.DataAccess2">
            <summary>
            通用数据库访问类
            </summary>
        </member>
        <member name="T:Vic.Data.IDataAccess2">
            <summary>
            通用数据库访问接口类
            </summary>
        </member>
        <member name="M:Vic.Data.IDataAccess2.CheckConn">
            <summary>
            检测数据库链接。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess2.CheckConn(System.String@)">
            <summary>
            检测数据库链接。
            </summary>
            <param name="exMessage">异常错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess2.CreateParameter">
            <summary>
            创建一个DbParameter实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess2.GetParamValue(System.String)">
            <summary>
            获取最后一次执行带DbParameter参数的方法的一个参数值
            </summary>
            <param name="parameterName">参数名</param>
            <returns>object</returns>
        </member>
        <member name="M:Vic.Data.IDataAccess2.GetParamValue(System.Int32)">
            <summary>
            获取最后一次执行带DbParameter参数的方法的一个参数值
            </summary>
            <param name="index">参数索引,从0开始</param>
            <returns>object</returns>
        </member>
        <member name="M:Vic.Data.IDataAccess2.ExecuteNonQuery(System.String)">
            <summary>     
            执行无返回数据集的SQL，返回受影响的行数。     
            </summary>     
            <param name="sql">SQL语句</param>
            <returns>Int</returns>  
        </member>
        <member name="M:Vic.Data.IDataAccess2.ExecuteSqlTran(System.Int32,System.String[])">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="commits">指定执行多少条SQL后提交一次，小于或等于0为不指定即执行所有SQL后再提交。</param>
            <param name="sqls">SQL语句</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess2.Query(System.String)">
            <summary>
            执行查询语句
            </summary>
            <param name="sqls">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Vic.Data.IDataAccess2.Query(System.String[])">
            <summary>
            执行查询语句
            </summary>
            <param name="sqls">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Vic.Data.IDataAccess2.QueryTable(System.String)">
            <summary>
            执行查询语句
            </summary>
            <param name="sql">查询语句</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:Vic.Data.IDataAccess2.QueryReader(System.String)">
            <summary>
            执行查询语句，返回DataReader，用完后要调用DbDataReader的Close()方法关闭实例
            </summary>
            <param name="sql">查询语句</param>
            <returns>DbDataReader</returns>
        </member>
        <member name="M:Vic.Data.IDataAccess2.QueryPage(System.String,System.Int32,System.Int32)">
            <summary>
            执行分页查询
            </summary>
            <param name="sql">查询语句</param>
            <param name="pageSize">分页大小</param>
            <param name="currPageIndex">当前页索引</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:Vic.Data.IDataAccess2.ExecProcedure(System.String)">
            <summary>
            执行存储过程
            </summary>
            <param name="storedProcName">存储过程名称</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess2.ExecProcedure(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter})">
            <summary>
            执行存储过程,带参数
            </summary>
            <param name="storedProcName">存储过程名称</param>
            <param name="parameters">DbParameter 参数</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess2.ExecProcedure(System.String,System.String[])">
            <summary>
            执行存储过程,并返回指定表数据集
            </summary>
            <param name="storedProcName">存储过程名称</param>
            <param name="tableNames">表名</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Vic.Data.IDataAccess2.ExecProcedure(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String[])">
            <summary>
            执行存储过程,带参数,并返回指定表数据集
            </summary>
            <param name="storedProcName">存储过程名称</param>
            <param name="parameters">DbParameter 参数</param>
            <param name="tableNames">表名</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Vic.Data.IDataAccess2.Update(System.Data.DataTable,System.String)">
            <summary>
            更新数据库
            </summary>
            <param name="dataTable">DataTable，必须设置主键。</param>
            <param name="sql">Table对应的SQL，必须包含主键列。</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess2.Update(System.Data.DataSet,System.String[])">
            <summary>
            更新数据库
            </summary>
            <param name="dataSet">DataSet，必须设置主键，多表时需要设置每个的TableName。</param>
            <param name="sql">每个Table对应的SQL，必须包含主键列。</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess2.UpdateTran(System.Data.DataSet,System.String[])">
            <summary>
            更新数据库(事务)
            </summary>
            <param name="dataSet">DataSet，必须设置主键，多表时需要设置每个的TableName。</param>
            <param name="sql">每个Table对应的SQL，必须包含主键列。</param>
            <returns></returns>
        </member>
        <member name="P:Vic.Data.IDataAccess2.ConnectionString">
            <summary>
            数据库连接串
            </summary>
        </member>
        <member name="P:Vic.Data.IDataAccess2.DbProviderName">
            <summary>
            数据库驱动名称
            </summary>
        </member>
        <member name="P:Vic.Data.IDataAccess2.DbProviderType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:Vic.Data.IDataAccess2.FactoryClasses">
            <summary>
            包含有关实现 System.Data.Common.DbProviderFactory 的所有已安装提供程序的信息
            </summary>
        </member>
        <member name="P:Vic.Data.IDataAccess2.ConnState">
            <summary>
            表示连接状态的字符串
            </summary>
        </member>
        <member name="M:Vic.Data.DataAccess2.#ctor(System.String,System.String)">
            <summary>
            通用数据库访问类。
            </summary>
            <param name="connectionString">数据库链接串</param>
            <param name="dbProviderName">数据库程序集名称</param>
        </member>
        <member name="M:Vic.Data.DataAccess2.#ctor(System.String,Vic.Data.DbProviderType)">
            <summary>
            通用数据库访问类
            </summary>
            <param name="connectionString">数据库链接串</param>
            <param name="dbProviderType">数据库程序集类型</param>
        </member>
        <member name="M:Vic.Data.DataAccess2.CheckConn">
            <summary>
            检测数据库链接。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess2.CheckConn(System.String@)">
            <summary>
            检测数据库链接。
            </summary>
            <param name="exMessage">异常错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess2.ConnOpen">
            <summary>
            打开数据库链接
            </summary>
        </member>
        <member name="M:Vic.Data.DataAccess2.ConnClose">
            <summary>
            关闭数据库链接，并释放资源。
            </summary>
        </member>
        <member name="M:Vic.Data.DataAccess2.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:Vic.Data.DataAccess2.CreateParameter">
            <summary>
            创建一个DbParameter实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess2.GetParametersValue(System.Collections.Generic.IList{System.Data.Common.DbParameter})">
            <summary>
            获取参数值
            </summary>
            <param name="parameters">参数数组</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess2.GetParamValue(System.String)">
            <summary>
            获取最后一次执行带DbParameter参数的方法的一个参数值
            </summary>
            <param name="parameterName">参数名</param>
            <returns>object</returns>
        </member>
        <member name="M:Vic.Data.DataAccess2.GetParamValue(System.Int32)">
            <summary>
            获取最后一次执行带DbParameter参数的方法的一个参数值
            </summary>
            <param name="index">参数索引,从0开始</param>
            <returns>object</returns>
        </member>
        <member name="M:Vic.Data.DataAccess2.ExecuteNonQuery(System.String)">
            <summary>     
            执行无返回数据集的SQL，返回受影响的行数。     
            </summary>     
            <param name="sql">SQL语句</param>
            <returns>Int</returns>  
        </member>
        <member name="M:Vic.Data.DataAccess2.ExecuteSqlTran(System.Int32,System.String[])">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="commits">指定执行多少条SQL后提交一次，小于或等于0为不指定即执行所有SQL后再提交。</param>
            <param name="sqls">SQL语句</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess2.Query(System.String)">
            <summary>
            执行查询语句
            </summary>
            <param name="sql">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Vic.Data.DataAccess2.Query(System.String[])">
            <summary>
            执行查询语句
            </summary>
            <param name="sqls">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Vic.Data.DataAccess2.QueryTable(System.String)">
            <summary>
            执行查询语句
            </summary>
            <param name="sql">查询语句</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:Vic.Data.DataAccess2.QueryReader(System.String)">
            <summary>
            执行查询语句，返回DataReader，用完后要调用DbDataReader的Close()方法关闭实例
            </summary>
            <param name="sql">查询语句</param>
            <returns>DbDataReader</returns>
        </member>
        <member name="M:Vic.Data.DataAccess2.QueryPage(System.String,System.Int32,System.Int32)">
            <summary>
            执行分页查询
            </summary>
            <param name="sql">查询语句</param>
            <param name="pageSize">分页大小</param>
            <param name="currPageIndex">当前页索引</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:Vic.Data.DataAccess2.ExecProcedure(System.String)">
            <summary>
            执行存储过程
            </summary>
            <param name="storedProcName">存储过程名称</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess2.ExecProcedure(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter})">
            <summary>
            执行存储过程,带参数
            </summary>
            <param name="storedProcName">存储过程名称</param>
            <param name="parameters">DbParameter 参数</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess2.ExecProcedure(System.String,System.String[])">
            <summary>
            执行存储过程,并返回指定表数据集
            </summary>
            <param name="storedProcName">存储过程名称</param>
            <param name="tableNames">表名</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Vic.Data.DataAccess2.ExecProcedure(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String[])">
            <summary>
            执行存储过程,带参数,并返回指定表数据集
            </summary>
            <param name="storedProcName">存储过程名称</param>
            <param name="parameters">DbParameter 参数</param>
            <param name="tableNames">表名</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Vic.Data.DataAccess2.Update(System.Data.DataTable,System.String)">
            <summary>
            更新数据库
            </summary>
            <param name="dataTable">DataTable，必须设置主键。</param>
            <param name="sql">Table对应的SQL，必须包含主键列。</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess2.Update(System.Data.DataSet,System.String[])">
            <summary>
            更新数据库
            </summary>
            <param name="dataSet">DataSet，必须设置主键，多表时需要设置每个的TableName。</param>
            <param name="sql">每个Table对应的SQL，必须包含主键列。</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess2.UpdateTran(System.Data.DataSet,System.String[])">
            <summary>
            更新数据库(事务)
            </summary>
            <param name="dataSet">DataSet，必须设置主键，多表时需要设置每个的TableName。</param>
            <param name="sql">每个Table对应的SQL，必须包含主键列。</param>
            <returns></returns>
        </member>
        <member name="P:Vic.Data.DataAccess2.ConnectionString">
            <summary>
            数据库连接串
            </summary>
        </member>
        <member name="P:Vic.Data.DataAccess2.DbProviderName">
            <summary>
            数据库驱动名称
            </summary>
        </member>
        <member name="P:Vic.Data.DataAccess2.DbProviderType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:Vic.Data.DataAccess2.FactoryClasses">
            <summary>
            包含有关实现 System.Data.Common.DbProviderFactory 的所有已安装提供程序的信息
            </summary>
        </member>
        <member name="P:Vic.Data.DataAccess2.ConnState">
            <summary>
            表示连接状态的字符串
            </summary>
        </member>
        <member name="T:Vic.Data.DataAccessComm">
            <summary>
            通用数据库访问公共类
            </summary>
        </member>
        <member name="M:Vic.Data.DataAccessComm.#ctor">
            <summary>
            通用数据库访问公共类
            </summary>
        </member>
        <member name="M:Vic.Data.DataAccessComm.DbProviderNames">
            <summary>
            用于数据库访问的提供程序名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccessComm.GetProviderName(Vic.Data.DbProviderType)">
            <summary>
            返回访问数据库的提供程序类型对应的名称
            </summary>
        </member>
        <member name="M:Vic.Data.DataAccessComm.GetProviderType(System.String)">
            <summary>
            返回访问数据库的提供程序名称对应的类型
            </summary>
            <param name="dbProviderName"></param>
            <returns></returns>
        </member>
        <member name="T:Vic.Data.DbProviderType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="F:Vic.Data.DbProviderType.SqlServer">
            <summary>
            采用 System.Data.SqlClient
            </summary>
        </member>
        <member name="F:Vic.Data.DbProviderType.SqlServerCe_3_5">
            <summary>
            采用 System.Data.SqlServerCe.3.5
            </summary>
        </member>
        <member name="F:Vic.Data.DbProviderType.Access">
            <summary>
            采用 System.Data.OleDb
            </summary>
        </member>
        <member name="F:Vic.Data.DbProviderType.Excel">
            <summary>
            采用 System.Data.OleDb
            </summary>
        </member>
        <member name="F:Vic.Data.DbProviderType.Oracle">
            <summary>
            采用 System.Data.OracleClient
            </summary>
        </member>
        <member name="F:Vic.Data.DbProviderType.OracleClient">
            <summary>
            采用 Oracle.DataAccess.Client
                可能需在应用程序的 .config 配置文件中的"system.data"的"DbProviderFactories"节点中添加如下项
            <para>＜add name="Oracle Data Provider for .NET" invariant="Oracle.DataAccess.Client" description="Oracle Data Provider for .NET" type="Oracle.DataAccess.Client.OracleClientFactory, Oracle.DataAccess, Version=2.111.6.20, Culture=neutral, PublicKeyToken=89b483f429c47342"＞</para>
            <para>其中Version、PublicKeyToken值视情况而定</para>
            </summary>
        </member>
        <member name="F:Vic.Data.DbProviderType.OracleManaged">
            <summary>
            采用 Oracle.ManagedDataAccess.Client
                可能需在应用程序的 .config 配置文件中的"system.data"的"DbProviderFactories"节点中添加如下项
            <para>＜add name="ODP.NET, Managed Driver" invariant="Oracle.ManagedDataAccess.Client" description="Oracle Data Provider for .NET, Managed Driver" type="Oracle.ManagedDataAccess.Client.OracleClientFactory, Oracle.ManagedDataAccess, Version=4.121.2.0, Culture=neutral, PublicKeyToken=89b483f429c47342"＞</para>
            <para>其中Version、PublicKeyToken值视情况而定</para>
            </summary>
        </member>
        <member name="F:Vic.Data.DbProviderType.MySql">
            <summary>
            采用 MySql.Data.MySqlClient
            </summary>
        </member>
        <member name="F:Vic.Data.DbProviderType.SQLite">
            <summary>
            采用 System.Data.SQLite
            </summary>
        </member>
        <member name="F:Vic.Data.DbProviderType.SQLiteEF6">
            <summary>
            采用 System.Data.SQLite.EF6
            </summary>
        </member>
        <member name="F:Vic.Data.DbProviderType.SQLiteLinq">
            <summary>
            采用 System.Data.SQLite.Linq
            </summary>
        </member>
        <member name="T:Vic.Data.DbTypes">
            <summary>
            数据类型类
            </summary>
        </member>
        <member name="M:Vic.Data.DbTypes.SqlParse(Vic.Data.SqlDbType)">
            <summary>
            将 Vic.Data.SqlDbType 转换为 System.Data.DbType
            </summary>
            <param name="dbType">Vic.Data.SqlDbType</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DbTypes.OdbcParse(Vic.Data.OdbcType)">
            <summary>
            将 Vic.Data.OdbcType 转换为 System.Data.DbType
            </summary>
            <param name="dbType">OdbcType</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DbTypes.OleDbParse(Vic.Data.OleDbType)">
            <summary>
            将 Vic.Data.OleDbType 转换为 System.Data.DbType
            </summary>
            <param name="dbType">OleDbType</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DbTypes.OracleParse(Vic.Data.OracleType)">
            <summary>
            将 Vic.Data.OracleType 转换为 System.Data.DbType
            </summary>
            <param name="dbType">OracleType</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DbTypes.OracleClientParse(Vic.Data.OracleClientType)">
            <summary>
            将 Vic.Data.OracleClientType 转换为 System.Data.DbType
            </summary>
            <param name="dbType">OracleClientType</param>
            <returns></returns>
        </member>
        <member name="T:Vic.Data.DbTypes.Sql">
            <summary>
            适用于 System.Data.SqlClient 驱动
            </summary>
        </member>
        <member name="T:Vic.Data.DbTypes.Odbc">
            <summary>
            适用于 System.Data.Odbc 驱动
            </summary>
        </member>
        <member name="T:Vic.Data.DbTypes.OleDb">
            <summary>
            适用于 System.Data.OleDb 驱动
            </summary>
        </member>
        <member name="T:Vic.Data.DbTypes.Oracle">
            <summary>
            适用于 System.Data.OracleClient 驱动
            </summary>
        </member>
        <member name="T:Vic.Data.DbTypes.OracleClient">
            <summary>
            适用于 Oracle.DataAccess.Client、Oracle.ManagedDataAccess.Client 驱动
            </summary>
        </member>
        <member name="T:Vic.Data.SqlDbType">
            <summary>
            用于 Vic.Data.DataAccess 中 Parameter 参数 SQL Server 特定的数据类型
            </summary>
        </member>
        <member name="T:Vic.Data.OdbcType">
            <summary>
            用于 Vic.Data.DataAccess 中 Parameter 参数 Odbc 特定的数据类型
            </summary>
        </member>
        <member name="T:Vic.Data.OleDbType">
            <summary>
            用于 Vic.Data.DataAccess 中 Parameter 参数 OleDb 特定的数据类型
            </summary>
        </member>
        <member name="T:Vic.Data.OracleType">
            <summary>
            用于 Vic.Data.DataAccess 中 Parameter 参数 Oracle 特定的数据类型
            </summary>
        </member>
        <member name="T:Vic.Data.OracleClientType">
            <summary>
            用于 Vic.Data.DataAccess 中 Parameter 参数 OracleClient、OracleManaged 特定的数据类型
            </summary>
        </member>
        <member name="M:Vic.Data.ExtensionMethod.ToList``1(System.Data.DataTable)">
            <summary>
            返回一个DataTable的List&lt;TResult&gt;实例
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:Vic.Data.DataAccess">
            <summary>
            通用数据库访问类
            </summary>
        </member>
        <member name="T:Vic.Data.IDataAccess">
            <summary>
            通用数据库访问接口类
            </summary>
        </member>
        <member name="M:Vic.Data.IDataAccess.GetDbProviderFactory">
            <summary>
            获取一个数据工厂实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.CreateConnection">
            <summary>
            创建一个DbConnection实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.CreateCommand(System.Data.Common.DbConnection)">
            <summary>
            创建一个DbConnection对象的DbCommand实例
            </summary>
            <param name="dbConnection"></param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.CreateParameter">
            <summary>
            创建一个DbParameter实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.CreateDataAdapter">
            <summary>
            创建一个DbDataAdapter实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.CreateCommandBuilder">
            <summary>
            创建一个CreateCommandBuilder实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.CheckConn">
            <summary>
            检测数据库链接。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.CheckConn(System.String@)">
            <summary>
            检测数据库链接。
            </summary>
            <param name="exMessage">异常错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.GetParamValue(System.String)">
            <summary>
            获取最后一次执行带DbParameter参数的方法的一个参数值
            </summary>
            <param name="parameterName">参数名</param>
            <returns>object</returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.GetParamValue(System.Int32)">
            <summary>
            获取最后一次执行带DbParameter参数的方法的一个参数值
            </summary>
            <param name="index">参数索引,从0开始</param>
            <returns>object</returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.ExecuteNonQuery(System.String)">
            <summary>     
            执行无返回数据集的SQL，返回受影响的行数。     
            </summary>     
            <param name="sql">SQL语句</param>
            <returns>Int</returns>  
        </member>
        <member name="M:Vic.Data.IDataAccess.ExecuteSqlTran(System.Int32,System.String[])">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="commits">指定执行多少条SQL后提交一次，小于或等于0为不指定即执行所有SQL后再提交。</param>
            <param name="sqls">SQL语句</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.Query(System.String)">
            <summary>
            执行查询语句
            </summary>
            <param name="sqls">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.Query(System.String[])">
            <summary>
            执行查询语句
            </summary>
            <param name="sqls">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.QueryTable(System.String)">
            <summary>
            执行查询语句
            </summary>
            <param name="sql">查询语句</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.QueryReader(System.String)">
            <summary>
            执行查询语句，返回DataReader，用完后要调用DbDataReader的Close()方法关闭实例
            </summary>
            <param name="sql">查询语句</param>
            <returns>DbDataReader</returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.QueryPage(System.String,System.Int32,System.Int32)">
            <summary>
            执行分页查询
            </summary>
            <param name="sql">查询语句</param>
            <param name="pageSize">分页大小</param>
            <param name="currPageIndex">当前页索引</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.ExecProcedure(System.String)">
            <summary>
            执行存储过程
            </summary>
            <param name="storedProcName">存储过程名称</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.ExecProcedure(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter})">
            <summary>
            执行存储过程,带参数
            </summary>
            <param name="storedProcName">存储过程名称</param>
            <param name="parameters">DbParameter 参数</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.ExecProcedure(System.String,System.String[])">
            <summary>
            执行存储过程,并返回指定表数据集
            </summary>
            <param name="storedProcName">存储过程名称</param>
            <param name="tableNames">表名</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.ExecProcedure(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String[])">
            <summary>
            执行存储过程,带参数,并返回指定表数据集
            </summary>
            <param name="storedProcName">存储过程名称</param>
            <param name="parameters">DbParameter 参数</param>
            <param name="tableNames">表名</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.Update(System.Data.DataTable,System.String)">
            <summary>
            更新数据库
            </summary>
            <param name="dataTable">DataTable，必须设置主键。</param>
            <param name="sql">Table对应的SQL，必须包含主键列。</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.Update(System.Data.DataSet,System.String[])">
            <summary>
            更新数据库
            </summary>
            <param name="dataSet">DataSet，必须设置主键，多表时需要设置每个的TableName。</param>
            <param name="sql">每个Table对应的SQL，必须包含主键列。</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.IDataAccess.UpdateTran(System.Data.DataSet,System.String[])">
            <summary>
            更新数据库(事务)
            </summary>
            <param name="dataSet">DataSet，必须设置主键，多表时需要设置每个的TableName。</param>
            <param name="sql">每个Table对应的SQL，必须包含主键列。</param>
            <returns></returns>
        </member>
        <member name="P:Vic.Data.IDataAccess.ConnectionString">
            <summary>
            数据库链接串
            </summary>
        </member>
        <member name="P:Vic.Data.IDataAccess.DbProviderName">
            <summary>
            数据库驱动名称
            </summary>
        </member>
        <member name="P:Vic.Data.IDataAccess.DbProviderType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:Vic.Data.IDataAccess.FactoryClasses">
            <summary>
            包含有关实现 System.Data.Common.DbProviderFactory 的所有已安装提供程序的信息
            </summary>
        </member>
        <member name="P:Vic.Data.IDataAccess.IsDisposed">
            <summary>
            资源是否已被释放过
            </summary>
        </member>
        <member name="M:Vic.Data.DataAccess.#ctor(System.String,System.String)">
            <summary>
            通用数据库访问类。
            </summary>
            <param name="connectionString">数据库链接串</param>
            <param name="dbProviderName">数据库程序集名称</param>
        </member>
        <member name="M:Vic.Data.DataAccess.#ctor(System.String,Vic.Data.DbProviderType)">
            <summary>
            通用数据库访问类
            </summary>
            <param name="connectionString">数据库链接串</param>
            <param name="dbProviderType">数据库程序集类型</param>
        </member>
        <member name="M:Vic.Data.DataAccess.GetDbProviderFactory">
            <summary>
            获取一个数据工厂实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess.CreateConnection">
            <summary>
            创建一个DbConnection实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess.CreateCommand(System.Data.Common.DbConnection)">
            <summary>
            创建一个DbConnection对象的DbCommand实例
            </summary>
            <param name="dbConnection"></param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess.CreateParameter">
            <summary>
            创建一个DbParameter实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess.CreateDataAdapter">
            <summary>
            创建一个DbDataAdapter实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess.CreateCommandBuilder">
            <summary>
            创建一个CreateCommandBuilder实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess.CheckConn">
            <summary>
            检测数据库链接。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess.CheckConn(System.String@)">
            <summary>
            检测数据库链接。
            </summary>
            <param name="exMessage">异常错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:Vic.Data.DataAccess.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="M:Vic.Data.DataAccess.GetParametersValue(System.Collections.Generic.IList{System.Data.Common.DbParameter})">
            <summary>
            获取参数值
            </summary>
            <param name="parameters">参数数组</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess.GetParamValue(System.String)">
            <summary>
            获取最后一次执行带DbParameter参数的方法的一个参数值
            </summary>
            <param name="parameterName">参数名</param>
            <returns>object</returns>
        </member>
        <member name="M:Vic.Data.DataAccess.GetParamValue(System.Int32)">
            <summary>
            获取最后一次执行带DbParameter参数的方法的一个参数值
            </summary>
            <param name="index">参数索引,从0开始</param>
            <returns>object</returns>
        </member>
        <member name="M:Vic.Data.DataAccess.ExecuteNonQuery(System.String)">
            <summary>     
            执行无返回数据集的SQL，返回受影响的行数。     
            </summary>     
            <param name="sql">SQL语句</param>
            <returns>Int</returns>  
        </member>
        <member name="M:Vic.Data.DataAccess.ExecuteSqlTran(System.Int32,System.String[])">
            <summary>
            执行多条SQL语句，实现数据库事务。
            </summary>
            <param name="commits">指定执行多少条SQL后提交一次，小于或等于0为不指定即执行所有SQL后再提交。</param>
            <param name="sqls">SQL语句</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess.Query(System.String)">
            <summary>
            执行查询语句
            </summary>
            <param name="sql">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Vic.Data.DataAccess.Query(System.String[])">
            <summary>
            执行查询语句
            </summary>
            <param name="sqls">查询语句</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Vic.Data.DataAccess.QueryTable(System.String)">
            <summary>
            执行查询语句
            </summary>
            <param name="sql">查询语句</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:Vic.Data.DataAccess.QueryReader(System.String)">
            <summary>
            执行查询语句，返回DataReader，用完后要调用DbDataReader的Close()方法关闭实例
            </summary>
            <param name="sql">查询语句</param>
            <returns>DbDataReader</returns>
        </member>
        <member name="M:Vic.Data.DataAccess.QueryPage(System.String,System.Int32,System.Int32)">
            <summary>
            执行分页查询
            </summary>
            <param name="sql">查询语句</param>
            <param name="pageSize">分页大小</param>
            <param name="currPageIndex">当前页索引</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:Vic.Data.DataAccess.ExecProcedure(System.String)">
            <summary>
            执行存储过程
            </summary>
            <param name="storedProcName">存储过程名称</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess.ExecProcedure(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter})">
            <summary>
            执行存储过程,带参数
            </summary>
            <param name="storedProcName">存储过程名称</param>
            <param name="parameters">DbParameter 参数</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess.ExecProcedure(System.String,System.String[])">
            <summary>
            执行存储过程,并返回指定表数据集
            </summary>
            <param name="storedProcName">存储过程名称</param>
            <param name="tableNames">表名</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Vic.Data.DataAccess.ExecProcedure(System.String,System.Collections.Generic.IList{System.Data.Common.DbParameter},System.String[])">
            <summary>
            执行存储过程,带参数,并返回指定表数据集
            </summary>
            <param name="storedProcName">存储过程名称</param>
            <param name="parameters">DbParameter 参数</param>
            <param name="tableNames">表名</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Vic.Data.DataAccess.Update(System.Data.DataTable,System.String)">
            <summary>
            更新数据库
            </summary>
            <param name="dataTable">DataTable，必须设置主键。</param>
            <param name="sql">Table对应的SQL，必须包含主键列。</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess.Update(System.Data.DataSet,System.String[])">
            <summary>
            更新数据库
            </summary>
            <param name="dataSet">DataSet，必须设置主键，多表时需要设置每个的TableName。</param>
            <param name="sql">每个Table对应的SQL，必须包含主键列。</param>
            <returns></returns>
        </member>
        <member name="M:Vic.Data.DataAccess.UpdateTran(System.Data.DataSet,System.String[])">
            <summary>
            更新数据库(事务)
            </summary>
            <param name="dataSet">DataSet，必须设置主键，多表时需要设置每个的TableName。</param>
            <param name="sql">每个Table对应的SQL，必须包含主键列。</param>
            <returns></returns>
        </member>
        <member name="P:Vic.Data.DataAccess.ConnectionString">
            <summary>
            数据库链接串
            </summary>
        </member>
        <member name="P:Vic.Data.DataAccess.DbProviderName">
            <summary>
            数据库驱动名称
            </summary>
        </member>
        <member name="P:Vic.Data.DataAccess.DbProviderType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:Vic.Data.DataAccess.FactoryClasses">
            <summary>
            包含有关实现 System.Data.Common.DbProviderFactory 的所有已安装提供程序的信息
            </summary>
        </member>
        <member name="P:Vic.Data.DataAccess.IsDisposed">
            <summary>
            资源是否已被释放过
            </summary>
        </member>
    </members>
</doc>
